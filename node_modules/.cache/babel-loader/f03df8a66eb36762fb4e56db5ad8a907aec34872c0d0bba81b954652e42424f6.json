{"ast":null,"code":"var _jsxFileName = \"/Users/touchbar/Documents/GitHub/oilrefinery/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { getCLS, getFID, getLCP, getTTFB, getFCP } from 'web-vitals';\n\n// Performance monitoring function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reportWebVitalsToAnalytics = ({\n  name,\n  delta,\n  id\n}) => {\n  // Log to console in development\n  if (process.env.NODE_ENV === 'development') {\n    console.log(`Web Vital: ${name}`, delta, id);\n  }\n\n  // Send to your analytics platform in production\n  if (process.env.NODE_ENV === 'production') {\n    // Example: Send to analytics\n    try {\n      // You can replace this with your analytics service\n      // analytics.send({\n      //   metric: name,\n      //   value: delta,\n      //   id: id\n      // });\n\n      // For now, just log to console\n      console.log(`${name}: ${delta}`);\n    } catch (error) {\n      console.error('Error sending metrics:', error);\n    }\n  }\n};\n\n// Monitor all vital metrics\ngetCLS(reportWebVitalsToAnalytics);\ngetFID(reportWebVitalsToAnalytics);\ngetLCP(reportWebVitalsToAnalytics);\ngetTTFB(reportWebVitalsToAnalytics);\ngetFCP(reportWebVitalsToAnalytics);\n\n// Add performance mark for app start\nperformance.mark('app-start');\n\n// Create root with error boundary\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\n// Add error boundary wrapper\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      hasError: true\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error('Application Error:', error, errorInfo);\n    // You can send error reports to your error tracking service here\n  }\n  render() {\n    if (this.state.hasError) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-boundary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Something went wrong.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.reload(),\n          children: \"Refresh Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this);\n    }\n    return this.props.children;\n  }\n}\n\n// Render app with error boundary and performance monitoring\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 82,\n  columnNumber: 3\n}, this));\n\n// Measure and log initial render time\nperformance.mark('app-rendered');\nperformance.measure('app-start-to-render', 'app-start', 'app-rendered');\n\n// Report web vitals\nreportWebVitals(reportWebVitalsToAnalytics);\n\n// Add bootstrap JS if needed\nimport('bootstrap/dist/js/bootstrap.min.js').then(() => {\n  console.log('Bootstrap JS loaded');\n});\n\n// Optional: Add service worker registration\nif ('serviceWorker' in navigator && process.env.NODE_ENV === 'production') {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker.register('/service-worker.js').then(registration => {\n      console.log('SW registered:', registration);\n    }).catch(error => {\n      console.log('SW registration failed:', error);\n    });\n  });\n}","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","getCLS","getFID","getLCP","getTTFB","getFCP","jsxDEV","_jsxDEV","reportWebVitalsToAnalytics","name","delta","id","process","env","NODE_ENV","console","log","error","performance","mark","root","createRoot","document","getElementById","ErrorBoundary","Component","constructor","props","state","hasError","getDerivedStateFromError","componentDidCatch","errorInfo","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","reload","StrictMode","measure","then","navigator","addEventListener","serviceWorker","register","registration","catch"],"sources":["/Users/touchbar/Documents/GitHub/oilrefinery/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { getCLS, getFID, getLCP, getTTFB, getFCP } from 'web-vitals';\n\n// Performance monitoring function\nconst reportWebVitalsToAnalytics = ({ name, delta, id }) => {\n  // Log to console in development\n  if (process.env.NODE_ENV === 'development') {\n    console.log(`Web Vital: ${name}`, delta, id);\n  }\n  \n  // Send to your analytics platform in production\n  if (process.env.NODE_ENV === 'production') {\n    // Example: Send to analytics\n    try {\n      // You can replace this with your analytics service\n      // analytics.send({\n      //   metric: name,\n      //   value: delta,\n      //   id: id\n      // });\n      \n      // For now, just log to console\n      console.log(`${name}: ${delta}`);\n    } catch (error) {\n      console.error('Error sending metrics:', error);\n    }\n  }\n};\n\n// Monitor all vital metrics\ngetCLS(reportWebVitalsToAnalytics);\ngetFID(reportWebVitalsToAnalytics);\ngetLCP(reportWebVitalsToAnalytics);\ngetTTFB(reportWebVitalsToAnalytics);\ngetFCP(reportWebVitalsToAnalytics);\n\n// Add performance mark for app start\nperformance.mark('app-start');\n\n// Create root with error boundary\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\n// Add error boundary wrapper\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error('Application Error:', error, errorInfo);\n    // You can send error reports to your error tracking service here\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"error-boundary\">\n          <h1>Something went wrong.</h1>\n          <button onClick={() => window.location.reload()}>\n            Refresh Page\n          </button>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\n// Render app with error boundary and performance monitoring\nroot.render(\n  <React.StrictMode>\n    <ErrorBoundary>\n      <App />\n    </ErrorBoundary>\n  </React.StrictMode>\n);\n\n// Measure and log initial render time\nperformance.mark('app-rendered');\nperformance.measure('app-start-to-render', 'app-start', 'app-rendered');\n\n// Report web vitals\nreportWebVitals(reportWebVitalsToAnalytics);\n\n// Add bootstrap JS if needed\nimport('bootstrap/dist/js/bootstrap.min.js').then(() => {\n  console.log('Bootstrap JS loaded');\n});\n\n// Optional: Add service worker registration\nif ('serviceWorker' in navigator && process.env.NODE_ENV === 'production') {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker.register('/service-worker.js')\n      .then(registration => {\n        console.log('SW registered:', registration);\n      })\n      .catch(error => {\n        console.log('SW registration failed:', error);\n      });\n  });\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}