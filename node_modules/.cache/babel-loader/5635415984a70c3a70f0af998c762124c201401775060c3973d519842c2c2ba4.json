{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import{memo}from'react';import'./map.css';import{jsx as _jsx}from\"react/jsx-runtime\";const LocationMap=/*#__PURE__*/memo(()=>{const mapRef=useRef(null);const mapInstanceRef=useRef(null);const[isMapVisible,setIsMapVisible]=useState(false);useEffect(()=>{// Lazy load Leaflet only when component is visible\nconst observer=new IntersectionObserver(async _ref=>{let[entry]=_ref;if(entry.isIntersecting){setIsMapVisible(true);observer.disconnect();}},{threshold:0.1});if(mapRef.current){observer.observe(mapRef.current);}return()=>observer.disconnect();},[]);useEffect(()=>{if(!isMapVisible||!mapRef.current||mapInstanceRef.current)return;const initializeMap=async()=>{try{// Dynamically import Leaflet\nconst L=(await import('leaflet')).default;await import('leaflet/dist/leaflet.css');// Initialize map\nconst map=L.map(mapRef.current,{center:[56.008412,92.86906],zoom:15,zoomControl:false,attributionControl:false});// Store map instance in ref instead of state\nmapInstanceRef.current=map;// Custom tile layer with WebP support and lazy loading\nconst tileLayer=L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',{maxZoom:19,className:'map-tile',loading:'lazy'});// Create and add attribution control in bottom-right\nL.control.attribution({position:'bottomright'}).addTo(map);// Add zoom control in top-right\nL.control.zoom({position:'topright'}).addTo(map);// Custom marker with WebP support\nconst customIcon=L.icon({iconUrl:'/marker-icon.webp',iconSize:[48,48],iconAnchor:[24,48],popupAnchor:[0,-48],shadowUrl:'/marker-shadow.webp',shadowSize:[48,48]});// Add marker\nconst marker=L.marker([56.008412,92.86906],{icon:customIcon,title:'Taimyr Fuel Company Location'}).addTo(map);// Add popup with lazy loading\nconst popup=L.popup({maxWidth:220,className:'custom-popup'}).setContent('Taimyr Fuel Company Location');marker.bindPopup(popup);// Add tile layer after setup\ntileLayer.addTo(map);// Add loaded class for fade-in effect\nmapRef.current.classList.add('loaded');}catch(error){console.error('Error initializing map:',error);}};initializeMap();// Cleanup\nreturn()=>{if(mapInstanceRef.current){mapInstanceRef.current.remove();mapInstanceRef.current=null;}};},[isMapVisible]);// Only depend on isMapVisible\nreturn/*#__PURE__*/_jsx(\"div\",{ref:mapRef,className:\"location-map\",role:\"region\",\"aria-label\":\"Interactive map showing Taimyr Fuel Company's location\"});});LocationMap.displayName='LocationMap';export default LocationMap;","map":{"version":3,"names":["React","useEffect","useRef","useState","memo","jsx","_jsx","LocationMap","mapRef","mapInstanceRef","isMapVisible","setIsMapVisible","observer","IntersectionObserver","_ref","entry","isIntersecting","disconnect","threshold","current","observe","initializeMap","L","default","map","center","zoom","zoomControl","attributionControl","tileLayer","maxZoom","className","loading","control","attribution","position","addTo","customIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","shadowUrl","shadowSize","marker","title","popup","maxWidth","setContent","bindPopup","classList","add","error","console","remove","ref","role","displayName"],"sources":["/Users/touchbar/Documents/GitHub/oilrefinery/src/component/locationMap.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { memo } from 'react';\nimport './map.css';\n\nconst LocationMap = memo(() => {\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const [isMapVisible, setIsMapVisible] = useState(false);\n\n  useEffect(() => {\n    // Lazy load Leaflet only when component is visible\n    const observer = new IntersectionObserver(\n      async ([entry]) => {\n        if (entry.isIntersecting) {\n          setIsMapVisible(true);\n          observer.disconnect();\n        }\n      },\n      { threshold: 0.1 }\n    );\n\n    if (mapRef.current) {\n      observer.observe(mapRef.current);\n    }\n\n    return () => observer.disconnect();\n  }, []);\n\n  useEffect(() => {\n    if (!isMapVisible || !mapRef.current || mapInstanceRef.current) return;\n\n    const initializeMap = async () => {\n      try {\n        // Dynamically import Leaflet\n        const L = (await import('leaflet')).default;\n        await import('leaflet/dist/leaflet.css');\n\n        // Initialize map\n        const map = L.map(mapRef.current, {\n          center: [56.008412, 92.86906],\n          zoom: 15,\n          zoomControl: false,\n          attributionControl: false\n        });\n\n        // Store map instance in ref instead of state\n        mapInstanceRef.current = map;\n\n        // Custom tile layer with WebP support and lazy loading\n        const tileLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n          maxZoom: 19,\n          className: 'map-tile',\n          loading: 'lazy'\n        });\n\n        // Create and add attribution control in bottom-right\n        L.control.attribution({\n          position: 'bottomright'\n        }).addTo(map);\n\n        // Add zoom control in top-right\n        L.control.zoom({\n          position: 'topright'\n        }).addTo(map);\n\n        // Custom marker with WebP support\n        const customIcon = L.icon({\n          iconUrl: '/marker-icon.webp',\n          iconSize: [48, 48],\n          iconAnchor: [24, 48],\n          popupAnchor: [0, -48],\n          shadowUrl: '/marker-shadow.webp',\n          shadowSize: [48, 48]\n        });\n\n        // Add marker\n        const marker = L.marker([56.008412, 92.86906], {\n          icon: customIcon,\n          title: 'Taimyr Fuel Company Location'\n        }).addTo(map);\n\n        // Add popup with lazy loading\n        const popup = L.popup({\n          maxWidth: 220,\n          className: 'custom-popup'\n        }).setContent('Taimyr Fuel Company Location');\n\n        marker.bindPopup(popup);\n\n        // Add tile layer after setup\n        tileLayer.addTo(map);\n\n        // Add loaded class for fade-in effect\n        mapRef.current.classList.add('loaded');\n      } catch (error) {\n        console.error('Error initializing map:', error);\n      }\n    };\n\n    initializeMap();\n\n    // Cleanup\n    return () => {\n      if (mapInstanceRef.current) {\n        mapInstanceRef.current.remove();\n        mapInstanceRef.current = null;\n      }\n    };\n  }, [isMapVisible]); // Only depend on isMapVisible\n\n  return (\n    <div\n      ref={mapRef}\n      className=\"location-map\"\n      role=\"region\"\n      aria-label=\"Interactive map showing Taimyr Fuel Company's location\"\n    />\n  );\n});\n\nLocationMap.displayName = 'LocationMap';\n\nexport default LocationMap;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,CAAEC,QAAQ,KAAQ,OAAO,CAC1D,OAASC,IAAI,KAAQ,OAAO,CAC5B,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnB,KAAM,CAAAC,WAAW,cAAGH,IAAI,CAAC,IAAM,CAC7B,KAAM,CAAAI,MAAM,CAAGN,MAAM,CAAC,IAAI,CAAC,CAC3B,KAAM,CAAAO,cAAc,CAAGP,MAAM,CAAC,IAAI,CAAC,CACnC,KAAM,CAACQ,YAAY,CAAEC,eAAe,CAAC,CAAGR,QAAQ,CAAC,KAAK,CAAC,CAEvDF,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAW,QAAQ,CAAG,GAAI,CAAAC,oBAAoB,CACvC,MAAAC,IAAA,EAAmB,IAAZ,CAACC,KAAK,CAAC,CAAAD,IAAA,CACZ,GAAIC,KAAK,CAACC,cAAc,CAAE,CACxBL,eAAe,CAAC,IAAI,CAAC,CACrBC,QAAQ,CAACK,UAAU,CAAC,CAAC,CACvB,CACF,CAAC,CACD,CAAEC,SAAS,CAAE,GAAI,CACnB,CAAC,CAED,GAAIV,MAAM,CAACW,OAAO,CAAE,CAClBP,QAAQ,CAACQ,OAAO,CAACZ,MAAM,CAACW,OAAO,CAAC,CAClC,CAEA,MAAO,IAAMP,QAAQ,CAACK,UAAU,CAAC,CAAC,CACpC,CAAC,CAAE,EAAE,CAAC,CAENhB,SAAS,CAAC,IAAM,CACd,GAAI,CAACS,YAAY,EAAI,CAACF,MAAM,CAACW,OAAO,EAAIV,cAAc,CAACU,OAAO,CAAE,OAEhE,KAAM,CAAAE,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CACF;AACA,KAAM,CAAAC,CAAC,CAAG,CAAC,KAAM,OAAM,CAAC,SAAS,CAAC,EAAEC,OAAO,CAC3C,KAAM,OAAM,CAAC,0BAA0B,CAAC,CAExC;AACA,KAAM,CAAAC,GAAG,CAAGF,CAAC,CAACE,GAAG,CAAChB,MAAM,CAACW,OAAO,CAAE,CAChCM,MAAM,CAAE,CAAC,SAAS,CAAE,QAAQ,CAAC,CAC7BC,IAAI,CAAE,EAAE,CACRC,WAAW,CAAE,KAAK,CAClBC,kBAAkB,CAAE,KACtB,CAAC,CAAC,CAEF;AACAnB,cAAc,CAACU,OAAO,CAAGK,GAAG,CAE5B;AACA,KAAM,CAAAK,SAAS,CAAGP,CAAC,CAACO,SAAS,CAAC,oDAAoD,CAAE,CAClFC,OAAO,CAAE,EAAE,CACXC,SAAS,CAAE,UAAU,CACrBC,OAAO,CAAE,MACX,CAAC,CAAC,CAEF;AACAV,CAAC,CAACW,OAAO,CAACC,WAAW,CAAC,CACpBC,QAAQ,CAAE,aACZ,CAAC,CAAC,CAACC,KAAK,CAACZ,GAAG,CAAC,CAEb;AACAF,CAAC,CAACW,OAAO,CAACP,IAAI,CAAC,CACbS,QAAQ,CAAE,UACZ,CAAC,CAAC,CAACC,KAAK,CAACZ,GAAG,CAAC,CAEb;AACA,KAAM,CAAAa,UAAU,CAAGf,CAAC,CAACgB,IAAI,CAAC,CACxBC,OAAO,CAAE,mBAAmB,CAC5BC,QAAQ,CAAE,CAAC,EAAE,CAAE,EAAE,CAAC,CAClBC,UAAU,CAAE,CAAC,EAAE,CAAE,EAAE,CAAC,CACpBC,WAAW,CAAE,CAAC,CAAC,CAAE,CAAC,EAAE,CAAC,CACrBC,SAAS,CAAE,qBAAqB,CAChCC,UAAU,CAAE,CAAC,EAAE,CAAE,EAAE,CACrB,CAAC,CAAC,CAEF;AACA,KAAM,CAAAC,MAAM,CAAGvB,CAAC,CAACuB,MAAM,CAAC,CAAC,SAAS,CAAE,QAAQ,CAAC,CAAE,CAC7CP,IAAI,CAAED,UAAU,CAChBS,KAAK,CAAE,8BACT,CAAC,CAAC,CAACV,KAAK,CAACZ,GAAG,CAAC,CAEb;AACA,KAAM,CAAAuB,KAAK,CAAGzB,CAAC,CAACyB,KAAK,CAAC,CACpBC,QAAQ,CAAE,GAAG,CACbjB,SAAS,CAAE,cACb,CAAC,CAAC,CAACkB,UAAU,CAAC,8BAA8B,CAAC,CAE7CJ,MAAM,CAACK,SAAS,CAACH,KAAK,CAAC,CAEvB;AACAlB,SAAS,CAACO,KAAK,CAACZ,GAAG,CAAC,CAEpB;AACAhB,MAAM,CAACW,OAAO,CAACgC,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC,CACxC,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CACjD,CACF,CAAC,CAEDhC,aAAa,CAAC,CAAC,CAEf;AACA,MAAO,IAAM,CACX,GAAIZ,cAAc,CAACU,OAAO,CAAE,CAC1BV,cAAc,CAACU,OAAO,CAACoC,MAAM,CAAC,CAAC,CAC/B9C,cAAc,CAACU,OAAO,CAAG,IAAI,CAC/B,CACF,CAAC,CACH,CAAC,CAAE,CAACT,YAAY,CAAC,CAAC,CAAE;AAEpB,mBACEJ,IAAA,QACEkD,GAAG,CAAEhD,MAAO,CACZuB,SAAS,CAAC,cAAc,CACxB0B,IAAI,CAAC,QAAQ,CACb,aAAW,wDAAwD,CACpE,CAAC,CAEN,CAAC,CAAC,CAEFlD,WAAW,CAACmD,WAAW,CAAG,aAAa,CAEvC,cAAe,CAAAnD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}