{"ast":null,"code":"var _jsxFileName = \"/Users/touchbar/Documents/GitHub/oilrefinery/src/App.js\";\n// src/App.js\nimport './App.css';\nimport { Suspense } from 'react';\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route } from \"react-router-dom\";\nimport Navbar from './component/navbar/navbar';\nimport { routesConfig } from './route';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PageLoader = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"page-loader\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loader-content\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this);\n_c = PageLoader;\nfunction App() {\n  const router = createBrowserRouter(createRoutesFromElements(/*#__PURE__*/_jsxDEV(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 32\n    }, this),\n    children: routesConfig.map(({\n      path,\n      element: Element\n    }) => /*#__PURE__*/_jsxDEV(Route, {\n      path: path === '/' ? undefined : path,\n      index: path === '/',\n      element: /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(PageLoader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 35\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Element, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }, this)\n    }, path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this)));\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"PageLoader\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["Suspense","RouterProvider","createBrowserRouter","createRoutesFromElements","Route","Navbar","routesConfig","jsxDEV","_jsxDEV","PageLoader","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","router","path","element","map","Element","undefined","index","fallback","_c2","$RefreshReg$"],"sources":["/Users/touchbar/Documents/GitHub/oilrefinery/src/App.js"],"sourcesContent":["// src/App.js\nimport './App.css';\nimport { Suspense } from 'react';\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route } from \"react-router-dom\";\nimport Navbar from './component/navbar/navbar';\nimport { routesConfig } from './route';\n\nconst PageLoader = () => (\n  <div className=\"page-loader\">\n    <div className=\"loader-content\">Loading...</div>\n  </div>\n);\n\nfunction App() {\n  const router = createBrowserRouter(\n    createRoutesFromElements(\n      <Route path=\"/\" element={<Navbar />}>\n        {routesConfig.map(({ path, element: Element }) => (\n          <Route\n            key={path}\n            path={path === '/' ? undefined : path}\n            index={path === '/'}\n            element={\n              <Suspense fallback={<PageLoader />}>\n                <Element />\n              </Suspense>\n            }\n          />\n        ))}\n      </Route>\n    )\n  );\n\n  return <RouterProvider router={router} />;\n}\n\nexport default App;"],"mappings":";AAAA;AACA,OAAO,WAAW;AAClB,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,EAAEC,mBAAmB,EAAEC,wBAAwB,EAAEC,KAAK,QAAQ,kBAAkB;AACvG,OAAOC,MAAM,MAAM,2BAA2B;AAC9C,SAASC,YAAY,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,UAAU,GAAGA,CAAA,kBACjBD,OAAA;EAAKE,SAAS,EAAC,aAAa;EAAAC,QAAA,eAC1BH,OAAA;IAAKE,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAAC;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAC7C,CACN;AAACC,EAAA,GAJIP,UAAU;AAMhB,SAASQ,GAAGA,CAAA,EAAG;EACb,MAAMC,MAAM,GAAGhB,mBAAmB,CAChCC,wBAAwB,cACtBK,OAAA,CAACJ,KAAK;IAACe,IAAI,EAAC,GAAG;IAACC,OAAO,eAAEZ,OAAA,CAACH,MAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAE;IAAAJ,QAAA,EACjCL,YAAY,CAACe,GAAG,CAAC,CAAC;MAAEF,IAAI;MAAEC,OAAO,EAAEE;IAAQ,CAAC,kBAC3Cd,OAAA,CAACJ,KAAK;MAEJe,IAAI,EAAEA,IAAI,KAAK,GAAG,GAAGI,SAAS,GAAGJ,IAAK;MACtCK,KAAK,EAAEL,IAAI,KAAK,GAAI;MACpBC,OAAO,eACLZ,OAAA,CAACR,QAAQ;QAACyB,QAAQ,eAAEjB,OAAA,CAACC,UAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QAAAJ,QAAA,eACjCH,OAAA,CAACc,OAAO;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IACX,GAPII,IAAI;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQV,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CACT,CACF,CAAC;EAED,oBAAOP,OAAA,CAACP,cAAc;IAACiB,MAAM,EAAEA;EAAO;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACW,GAAA,GArBQT,GAAG;AAuBZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAU,GAAA;AAAAC,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}