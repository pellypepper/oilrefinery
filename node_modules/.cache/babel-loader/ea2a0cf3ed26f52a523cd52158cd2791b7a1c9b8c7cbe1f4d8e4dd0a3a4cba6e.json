{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./map.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LocationMap=()=>{const[isInView,setIsInView]=useState(false);const[isInteractiveLoaded,setIsInteractiveLoaded]=useState(false);// Intersection Observer to detect when map is in viewport\nuseEffect(()=>{const observer=new IntersectionObserver(_ref=>{let[entry]=_ref;if(entry.isIntersecting){setIsInView(true);observer.unobserve(entry.target);// Stop observing once in view\n}},{threshold:0.1});const mapElement=document.getElementById('map-container');if(mapElement){observer.observe(mapElement);}return()=>{if(mapElement){observer.unobserve(mapElement);}};},[]);const handleIframeLoad=()=>{setIsInteractiveLoaded(true);};return/*#__PURE__*/_jsxs(\"div\",{id:\"map-container\",className:\"frame-wrapper relative\",\"aria-label\":\"Google Maps showing our location\",children:[isInView&&/*#__PURE__*/_jsx(\"iframe\",{src:\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2230.5923996872893!2d92.86905987669368!3d56.00841267317989!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x5cd7ae39587ca113%3A0xbbad0e3605e3c0e6!2sBograda%20St%2C%20Krasnoyarsk%2C%20Krasnoyarskiy%20kray%2C%20Russia%2C%20660049!5e0!3m2!1sen!2suk!4v1736279444174!5m2!1sen!2suk\",className:\"w-100 frame-box\",style:{border:0,opacity:isInteractiveLoaded?1:0,transition:'opacity 0.3s ease-in-out'},allowFullScreen:true,loading:\"lazy\",title:\"Our location on Google Maps\",referrerPolicy:\"no-referrer-when-downgrade\",onLoad:handleIframeLoad}),isInView&&!isInteractiveLoaded&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 bg-gray-100 flex items-center justify-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-600\",children:\"Loading map...\"})})]});};export default LocationMap;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","LocationMap","isInView","setIsInView","isInteractiveLoaded","setIsInteractiveLoaded","observer","IntersectionObserver","_ref","entry","isIntersecting","unobserve","target","threshold","mapElement","document","getElementById","observe","handleIframeLoad","id","className","children","src","style","border","opacity","transition","allowFullScreen","loading","title","referrerPolicy","onLoad"],"sources":["/Users/touchbar/Documents/GitHub/oilrefinery/src/component/locationMap.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './map.css';\nconst LocationMap = () => {\n  const [isInView, setIsInView] = useState(false);\n  const [isInteractiveLoaded, setIsInteractiveLoaded] = useState(false);\n\n  // Intersection Observer to detect when map is in viewport\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          setIsInView(true);\n          observer.unobserve(entry.target); // Stop observing once in view\n        }\n      },\n      { threshold: 0.1 }\n    );\n\n    const mapElement = document.getElementById('map-container');\n    if (mapElement) {\n      observer.observe(mapElement);\n    }\n\n    return () => {\n      if (mapElement) {\n        observer.unobserve(mapElement);\n      }\n    };\n  }, []);\n\n  const handleIframeLoad = () => {\n    setIsInteractiveLoaded(true);\n  };\n\n  return (\n    <div \n      id=\"map-container\"\n      className=\"frame-wrapper relative\"\n      aria-label=\"Google Maps showing our location\"\n    >\n      {/* Always show the iframe when in view */}\n      {isInView && (\n        <iframe\n          src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2230.5923996872893!2d92.86905987669368!3d56.00841267317989!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x5cd7ae39587ca113%3A0xbbad0e3605e3c0e6!2sBograda%20St%2C%20Krasnoyarsk%2C%20Krasnoyarskiy%20kray%2C%20Russia%2C%20660049!5e0!3m2!1sen!2suk!4v1736279444174!5m2!1sen!2suk\"\n          className=\"w-100 frame-box\"\n          style={{ \n            border: 0,\n            opacity: isInteractiveLoaded ? 1 : 0,\n            transition: 'opacity 0.3s ease-in-out'\n          }}\n          allowFullScreen\n          loading=\"lazy\"\n          title=\"Our location on Google Maps\"\n          referrerPolicy=\"no-referrer-when-downgrade\"\n          onLoad={handleIframeLoad}\n        />\n      )}\n      \n      {/* Show loading state while iframe is loading */}\n      {isInView && !isInteractiveLoaded && (\n        <div className=\"absolute inset-0 bg-gray-100 flex items-center justify-center\">\n          <div className=\"text-gray-600\">Loading map...</div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LocationMap;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACnB,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGR,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAACS,mBAAmB,CAAEC,sBAAsB,CAAC,CAAGV,QAAQ,CAAC,KAAK,CAAC,CAErE;AACAC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAU,QAAQ,CAAG,GAAI,CAAAC,oBAAoB,CACvCC,IAAA,EAAa,IAAZ,CAACC,KAAK,CAAC,CAAAD,IAAA,CACN,GAAIC,KAAK,CAACC,cAAc,CAAE,CACxBP,WAAW,CAAC,IAAI,CAAC,CACjBG,QAAQ,CAACK,SAAS,CAACF,KAAK,CAACG,MAAM,CAAC,CAAE;AACpC,CACF,CAAC,CACD,CAAEC,SAAS,CAAE,GAAI,CACnB,CAAC,CAED,KAAM,CAAAC,UAAU,CAAGC,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CAC3D,GAAIF,UAAU,CAAE,CACdR,QAAQ,CAACW,OAAO,CAACH,UAAU,CAAC,CAC9B,CAEA,MAAO,IAAM,CACX,GAAIA,UAAU,CAAE,CACdR,QAAQ,CAACK,SAAS,CAACG,UAAU,CAAC,CAChC,CACF,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAI,gBAAgB,CAAGA,CAAA,GAAM,CAC7Bb,sBAAsB,CAAC,IAAI,CAAC,CAC9B,CAAC,CAED,mBACEL,KAAA,QACEmB,EAAE,CAAC,eAAe,CAClBC,SAAS,CAAC,wBAAwB,CAClC,aAAW,kCAAkC,CAAAC,QAAA,EAG5CnB,QAAQ,eACPJ,IAAA,WACEwB,GAAG,CAAC,8UAA8U,CAClVF,SAAS,CAAC,iBAAiB,CAC3BG,KAAK,CAAE,CACLC,MAAM,CAAE,CAAC,CACTC,OAAO,CAAErB,mBAAmB,CAAG,CAAC,CAAG,CAAC,CACpCsB,UAAU,CAAE,0BACd,CAAE,CACFC,eAAe,MACfC,OAAO,CAAC,MAAM,CACdC,KAAK,CAAC,6BAA6B,CACnCC,cAAc,CAAC,4BAA4B,CAC3CC,MAAM,CAAEb,gBAAiB,CAC1B,CACF,CAGAhB,QAAQ,EAAI,CAACE,mBAAmB,eAC/BN,IAAA,QAAKsB,SAAS,CAAC,+DAA+D,CAAAC,QAAA,cAC5EvB,IAAA,QAAKsB,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,gBAAc,CAAK,CAAC,CAChD,CACN,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAApB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}